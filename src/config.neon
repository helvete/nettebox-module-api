services:
	geoIp: Argo22\Modules\Core\Api\GeoIp

	- Argo22\Modules\Core\Api\Account\Validator
	- Argo22\Modules\Core\Api\ApiVersion(%api_version%)
	- Argo22\Modules\Core\Api\Account\ApiAuthenticator

	- Argo22\Modules\Core\Api\Account\IModelFactory
	accountsCollection:
		class: Argo22\Modules\Core\Api\Account\Collection('account', @Argo22\Modules\Core\Api\Account\IModelFactory)
		setup:
			- $geoIp( @Argo22\Modules\Core\Api\GeoIp )

	- Argo22\Modules\Core\Api\AccountDevice\IModelFactory
	devicesCollection:
		factory: Argo22\Modules\Core\Api\AccountDevice\Collection('account_device', @Argo22\Modules\Core\Api\AccountDevice\IModelFactory)

	passwordRecovery: Argo22\Modules\Core\User\PasswordRecovery(@Argo22\Modules\Core\Api\Account\Collection)


# API models

	apiSession:
		class: Argo22\Modules\Core\Api\Account\Session
		inject: yes

	apiUser:
		class: Argo22\Modules\Core\Api\Account\User
		inject: yes

# Move structure like this into application config and adjust G key and A cert locations
#	notificationApiConfig:
#		googleData: "secret_application_gcm_token"
#		appleData:
#			# production certificate (absolute path)
#			0: "/home/user/repo/certificates/server_certificates_prod.pem"
#			# sandbox certificate (absolute path)
#			1: "/home/user/repo/certificates/server_certificates_dev.pem"
#			entrust: "/home/user/repo/certificates/entrust_root_certification_authority.pem"
